<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ac.big.bigd.webservice.mapper.gsa.TaxonMapper">
    <resultMap id="Taxon" type="Taxon">
        <id column="tax_id" property="taxonId" jdbcType="INTEGER"/>
        <result column="name_txt" property="name" jdbcType="VARCHAR"/>
        <result column="ranks" property="ranks" jdbcType="VARCHAR"/>
        <result column="genbank_common_name" property="genBankCommonName" jdbcType="VARCHAR"/>
        <collection property="commonNames" ofType="string" javaType="list">
            <result column="common_name" jdbcType="VARCHAR"/>
        </collection>
        <collection property="synonymNames" ofType="string" javaType="list">
            <result column="synonym_name" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>
    <resultMap id="TaxonMap1" type="Taxon2">
        <id column="tax_id" property="taxonId" jdbcType="INTEGER"/>
        <result column="name_txt" property="name" jdbcType="VARCHAR"/>
        <result column="ranks" property="ranks" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="TaxonMap2" type="Taxon3">
        <id column="tax_id" property="taxonId" jdbcType="INTEGER"/>
        <result column="name_txt" property="name" jdbcType="VARCHAR"/>
        <result column="ranks" property="ranks" jdbcType="VARCHAR"/>
        <result column="divided_id" property="dividedId" jdbcType="INTEGER"/>
    </resultMap>

    <select id="selectTaxonById" parameterType="int" resultMap="Taxon" useCache="true">
        SELECT
            a.tax_id,
            a.ranks,
            b.name_txt,
            c.name_txt AS genbank_common_name,
            d.name_txt AS common_name,
            e.name_txt AS synonym_name
        FROM taxon_node a
            LEFT JOIN taxon_name b ON b.tax_id = a.tax_id AND b.name_class = 'scientific name'
            LEFT JOIN taxon_name c ON c.tax_id = a.tax_id AND c.name_class = 'genbank common name'
            LEFT JOIN taxon_name d ON d.tax_id = a.tax_id AND d.name_class = 'common name'
            LEFT JOIN taxon_name e ON e.tax_id = a.tax_id AND d.name_class = 'synonym'
        WHERE a.tax_id = #{taxonId}
    </select>

    <select id="selectAncestorsById" statementType="CALLABLE" parameterType="int" resultMap="TaxonMap1" useCache="true">
        {call show_parentLst(#{taxonId,mode=IN,jdbcType=INTEGER})}
    </select>

    <select id="getGenusById" statementType="CALLABLE" parameterType="int" resultMap="TaxonMap1" useCache="true">
        {call show_genus(#{taxonId,mode=IN,jdbcType=INTEGER})}
    </select>

    <select id="listTaxonIdsByScientificName" parameterType="String" resultType="Integer" >
        SELECT tax_id
        FROM taxon_name
        WHERE name_txt LIKE concat(#{name}, '%') AND name_class = 'scientific name'
    </select>

    <select id="getTaxonIdByParentId" parameterType="int" resultType="Integer">
        SELECT tax_id
        FROM taxon_node
        WHERE p_tax_id = #{pTaxId}
    </select>

    <select id="selectAncestors3ById" statementType="CALLABLE" parameterType="int" resultMap="TaxonMap2" useCache="true">
        {call show_parentLst(#{taxonId,mode=IN,jdbcType=INTEGER})}
    </select>
    <select id="selectTaxon3ById" parameterType="int" resultMap="TaxonMap2" useCache="true">
        SELECT
            a.tax_id,
            a.ranks,
            b.name_txt,
            a.divided_id
        FROM taxon_node a
            LEFT JOIN taxon_name b ON b.tax_id = a.tax_id AND b.name_class = 'scientific name'
        WHERE a.tax_id = #{taxonId}
    </select>

</mapper>